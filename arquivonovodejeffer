!function() {
    "use strict";
    var n = "lp_ref",
        t = "cpid",
        e = "lpurl",
        c = "https://track.lojatudoonline.site",
        r = "(?<domain>http(?:s?)://[^/]*)".concat("/cf/click"),
        a = "(?:(?:/(?<cta>[1-9][0-9]*)/?)|(?:/))?",
        i = "^".concat(r).concat(a).concat("(?:$|(\\?.*))"),
        o = 'javascript:window.clickflare.l="(?<original_link>'.concat(r).concat(a, '("|(\\?[^"]*"))).*'),
        s = function() {
            return new RegExp(i, "")
        },
        u = function() {
            return new RegExp(o, "")
        };

    function l(n) {
        var t = function(n) {
            return n.replace(s(), function(n) {
                for (var t = [], e = 1; e < arguments.length; e++) t[e - 1] = arguments[e];
                var r = t[t.length - 1].domain;
                return n.replace(r, c)
            })
        }(n);
        return 'javascript:window.clickflare.l="'.concat(t, '"; void 0;')
    }

    function f(n, t) {
        if (t && n && t.apply(document, [n]),
            /loaded|interactive|complete/.test(document.readyState))
            for (var e = 0, c = document.links.length; e < c; e++)
                if (s().test(document.links[e].href)) {
                    var r = document.links[e];
                    window.clickflare.links_replaced.has(r) || (r.href = l(r.href), window.clickflare.links_replaced.add(r))
                }
    }
    var d, h, m, p;
    ! function(r, a) {
        var i = document.onreadystatechange;
        window.clickflare || (window.clickflare = {
            listeners: {},
            customParams: {},
            links_replaced: new Set,
            addEventListener: function(n, t) {
                var e = this.listeners[n] || [];
                e.includes(t) || e.push(t), this.listeners[n] = e
            },
            dispatchEvent: function(n, t) {
                t && (this.customParams[n] = t), (this.listeners[n] || []).forEach(function(n) {
                    return n(t)
                })
            },
            push: function(n, t) {
                t && (this.customParams[n] = t), (this.listeners[n] || []).forEach(function(n) {
                    return n(t)
                })
            }
        }), document.onreadystatechange = function(n) {
            return f(n, i)
        }, f(null, i), setTimeout(function() {
            ! function(r, a) {
                var i, o = function(r, a) {
                        var i = new URL("".concat(c).concat(r)),
                            o = "{",
                            s = o + o;
                        a.startsWith(s) || i.searchParams.set(t, a);
                        return i.searchParams.append(n, document.referrer),
                            i.searchParams.append(e, location.href),
                            i.searchParams.append("lpt", document.title),
                            i.searchParams.append("t", (new Date).getTime().toString()),
                            i.toString()
                    }(r, a),
                    s = document.createElement("script"),
                    l = document.scripts[0];
                s.async = 1, s.src = o, s.onerror = function() {
                    ! function() {
                        for (var n = function(n, t) {
                                var e = document.links[n];
                                u().test(e.href) && setTimeout(function() {
                                    e && e.setAttribute("href", function(n) {
                                        var t = n.match(u());
                                        if (t) {
                                            var e = (t.groups || {}).original_link;
                                            return e ? e.slice(0, -1) : n
                                        }
                                        return n
                                    }(e.href))
                                })
                            }, t = 0, e = document.links.length; t < e; t++) n(t)
                    }()
                }, null === (i = l.parentNode) || void 0 === i || i.insertBefore(s, l)
            }(r, a)
        })
    }("".concat("/cf/tags", "/").concat(new URL(window.location.href).searchParams.get("cftmid") || "{{__CONTAINER_ID__}}"),
        (m = new URL(window.location.href).searchParams.get(t),
            d = new RegExp("(^| )".concat("cf_cpid", "=([^;]+)")),
            p = (h = document.cookie.match(d)) && h.pop() || null,
            m || p || "{{__CAMPAIGN_ID__}}"))
}();
